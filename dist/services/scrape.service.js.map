{"version":3,"sources":["../../src/services/scrape.service.js"],"names":["request","require","cheerio","Translate","v2","translate","parseUrl","url","Errors","NO_URL","response","err","PARSE_ERROR","$","load","body","title","text","favicon","attr","snippet","contents","first","thumbImage","data","console","log","translateUrl","target","translation","module","exports"],"mappings":";;;;AAKA;;;;;;;;AALA,IAAMA,UAAUC,QAAQ,eAAR,CAAhB;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;;IACOE,S,GAAaF,QAAQ,yBAAR,EAAmCG,E,CAAhDD,S;;AACP,IAAME,YAAY,IAAIF,SAAJ,CAAc,EAAd,CAAlB;;AAIA,IAAMG;AAAA,qEAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACVA,GADU;AAAA;AAAA;AAAA;;AAAA,kBAEPC,gBAAOC,MAFA;;AAAA;AAAA;AAAA;AAAA,mBAKUT,QAAQO,GAAR,CALV;;AAAA;AAKPG,oBALO;;AAAA,iBAMTA,SAASC,GANA;AAAA;AAAA;AAAA;;AAAA,kBAOLH,gBAAOI,WAPF;;AAAA;AASPC,aATO,GASHX,QAAQY,IAAR,CAAaJ,SAASK,IAAtB,CATG;AAUPC,iBAVO,GAUCH,EAAE,OAAF,EAAWI,IAAX,EAVD;AAWPC,mBAXO,GAWGL,EAAE,2BAAF,EAA+BM,IAA/B,CAAoC,MAApC,KAA+CN,EAAE,gBAAF,EAAoBM,IAApB,CAAyB,MAAzB,CAXlD;AAYPC,mBAZO,GAYGP,EAAE,mBAAF,EAAuBQ,QAAvB,GAAkCC,KAAlC,GAA0CL,IAA1C,EAZH;AAaPM,sBAbO,GAaMV,EAAE,aAAF,EAAiBM,IAAjB,CAAsB,KAAtB,CAbN;AAcLK,gBAdK,GAcE;AACXR,0BADW;AAEXE,8BAFW;AAGX,6BAAcK,UAHH;AAIXH;AAJW,aAdF;AAAA,6CAoBJI,IApBI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAuBbC,oBAAQC,GAAR;AAvBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;;AA4BA,IAAMC;AAAA,sEAAe,kBAAOpB,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACdA,GADc;AAAA;AAAA;AAAA;;AAAA,kBAEXC,gBAAOC,MAFI;;AAAA;AAAA;AAAA;AAAA,mBAKMT,QAAQO,GAAR,CALN;;AAAA;AAKXG,oBALW;;AAAA,iBAMbA,SAASC,GANI;AAAA;AAAA;AAAA;;AAAA,kBAOTH,gBAAOI,WAPE;;AAAA;AASTK,gBATS,GASFP,SAASK,IATP;AAUTa,kBAVS,GAUA,IAVA;AAAA;AAAA,mBAWavB,UAAUA,SAAV,CAAoBY,IAApB,EAA0BW,MAA1B,CAXb;;AAAA;AAAA;AAAA;AAWRC,uBAXQ;;AAYfJ,oBAAQC,GAAR,mBAA4BG,WAA5B;;AAZe;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAejBJ,oBAAQC,GAAR;AAfiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAoBAI,OAAOC,OAAP,GAAiB;AACfzB,oBADe;AAEfqB;AAFe,CAAjB","file":"scrape.service.js","sourcesContent":["const request = require('async-request');\r\nconst cheerio = require('cheerio');\r\nconst {Translate} = require('@google-cloud/translate').v2;\r\nconst translate = new Translate({});\r\n\r\nimport Errors from '../constants/error.constant';\r\n\r\nconst parseUrl = async (url) => {\r\n  if (!url) {\r\n    throw Errors.NO_URL;\r\n  }\r\n  try {\r\n    const response = await request(url);\r\n    if (response.err) {\r\n      throw Errors.PARSE_ERROR;\r\n    } else {\r\n      let $ = cheerio.load(response.body);\r\n      let title = $('title').text();\r\n      let favicon = $('link[rel=\"shortcut icon\"]').attr('href') || $('link[rel=icon]').attr('href');\r\n      let snippet = $('.shortdescription').contents().first().text();\r\n      let thumbImage = $('.thumbimage').attr('src');\r\n      const data = {\r\n        title, \r\n        favicon,\r\n        'large-image':thumbImage,\r\n        snippet\r\n      }\r\n      return data\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst translateUrl = async (url) => {\r\n  if (!url) {\r\n    throw Errors.NO_URL;\r\n  }\r\n  try {\r\n    const response = await request(url);\r\n    if (response.err) {\r\n      throw Errors.PARSE_ERROR;\r\n    } else {\r\n      const text = response.body;\r\n      const target = 'ru';\r\n      const [translation] = await translate.translate(text, target);\r\n      console.log(`Translation: ${translation}`);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  parseUrl,\r\n  translateUrl\r\n};"]}