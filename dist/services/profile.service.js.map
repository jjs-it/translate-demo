{"version":3,"sources":["../../src/services/profile.service.js"],"names":["_","require","createProfile","params","username","password","Errors","NO_PARAM","bcrypt","hash","hashPwd","User","create","user","findProfileById","id","findOneById","module","exports"],"mappings":";;AAIA;;;;AACA;;AACA;;;;;;;;;;AANA;;;AAGA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;;;AAKA;;;;;;;;;AASA,IAAMC;AAAA,qEAAgB;AAAA,QAAYC,MAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBC,oBAFkB,GAIhBD,MAJgB,CAElBC,QAFkB,EAGlBC,QAHkB,GAIhBF,MAJgB,CAGlBE,QAHkB;;AAAA,kBAMhB,CAACD,QAAD,IAAa,CAACC,QANE;AAAA;AAAA;AAAA;;AAAA,kBAOZC,gBAAOC,QAPK;;AAAA;AAAA;AAAA;AAAA,mBAWIC,iBAAOC,IAAP,CAAYJ,QAAZ,EAAsB,EAAtB,CAXJ;;AAAA;AAWZK,mBAXY;AAAA;AAAA,mBAYCC,WAAKC,MAAL,CAAY;AAC7BR,gCAD6B;AAE7BC,wBAAUK;AAFmB,aAAZ,CAZD;;AAAA;AAYZG,gBAZY;AAAA,6CAiBXA,IAjBW;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAuBA,IAAMC;AAAA,sEAAkB,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhBF,gBAFgB;AAGpB;;AAHoB,gBAKfA,IALe;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMLF,WAAKK,WAAL,CAAiBD,EAAjB,CANK;;AAAA;AAMlBF,gBANkB;;AAAA;AAAA,8CASbA,IATa;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAeAI,OAAOC,OAAP,GAAiB;AACfhB,8BADe;AAEfY;AAFe,CAAjB","file":"profile.service.js","sourcesContent":["/*\r\n This file provides apis related with profile.\r\n*/\r\nconst _ = require('lodash');\r\nimport bcrypt from 'bcrypt'\r\nimport { User } from '../models/user.model';\r\nimport Errors  from '../constants/error.constant';\r\n\r\n/*\r\n * Create new profile\r\n *\r\n * @ Required params\r\n * @@ phone (String : Required)\r\n *\r\n * @ return created User Object\r\n *\r\n */\r\nconst createProfile = async ({ ...params }) => {\r\n  const {\r\n    username,\r\n    password\r\n  } = params;\r\n\r\n  if (!username || !password) {\r\n    throw Errors.NO_PARAM;\r\n  }\r\n  \r\n  try {\r\n    const hashPwd = await bcrypt.hash(password, 10)\r\n    const user = await User.create({\r\n      username,\r\n      password: hashPwd,\r\n    });\r\n\r\n    return user;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst findProfileById = async (id) => {\r\n  try {\r\n    let user;\r\n    // To do : find from cache\r\n\r\n    if (!user) {\r\n      user = await User.findOneById(id);\r\n    }\r\n\r\n    return user;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  createProfile,\r\n  findProfileById\r\n};\r\n"]}