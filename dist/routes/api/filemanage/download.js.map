{"version":3,"sources":["../../../../src/routes/api/filemanage/download.js"],"names":["require","FileService","module","exports","req","res","downloadFile","params","identifier","file","download","err","console","log","error","message"],"mappings":";;;;eAAwBA,QAAQ,mBAAR,C;IAAhBC,W,YAAAA,W;;AAERC,OAAOC,OAAP;AAAA,qEAAiB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEMJ,YAAYK,YAAZ,CAAyBF,IAAIG,MAAJ,CAAWC,UAApC,CAFN;;AAAA;AAEPC,gBAFO;;AAGbJ,gBAAIK,QAAJ,CAAaD,IAAb,EAAmB,UAACE,GAAD,EAAS;AAC1B,kBAAIA,GAAJ,EAAS;AACP,sBAAM,oBAAN;AACD;AACD;AACD,aALD;AAHa;AAAA;;AAAA;AAAA;AAAA;;AAUbC,oBAAQC,GAAR;AACAR,gBAAIS,KAAJ,CAAU;AACRC;AADQ,aAAV;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"download.js","sourcesContent":["const { FileService } = require('../../../services');\r\n\r\nmodule.exports = async (req, res) => {\r\n  try {\r\n    const file = await FileService.downloadFile(req.params.identifier);\r\n    res.download(file, (err) => {\r\n      if (err) {\r\n        throw \"File download fail\"\r\n      }\r\n      return;\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.error({\r\n      message: err,\r\n    });\r\n  }\r\n};\r\n"]}