{"version":3,"sources":["../../../../src/routes/api/auth/confirm.auth.js"],"names":["require","Sms","AuthService","ProfileService","NotificationSettingService","module","exports","req","res","body","phone","code","error","message","next","findOne","sms","remove","findProfileByPhone","user","createProfile","success","token","generateToken"],"mappings":";;;;eAAgBA,QAAQ,2BAAR,C;IAARC,G,YAAAA,G;;gBAKJD,QAAQ,mBAAR,C;IAHFE,W,aAAAA,W;IACAC,c,aAAAA,c;IACAC,0B,aAAAA,0B;;AAGFC,OAAOC,OAAP;AAAA,qEAAiB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACSD,IAAIE,IADb,EACPC,KADO,aACPA,KADO,EACAC,IADA,aACAA,IADA;AAAA;;AAAA,kBAKT,CAACD,KAAD,IAAU,CAACC,IALF;AAAA;AAAA;AAAA;;AAMXH,gBAAII,KAAJ,CAAU;AACRC,uBAAS,8BADD,CACiC;AADjC,aAAV;AANW,6CASJC,MATI;;AAAA;AAAA;AAAA,mBAaKb,IAAIc,OAAJ,CAAY,EAAEL,YAAF,EAASC,UAAT,EAAZ,CAbL;;AAAA;AAaPK,eAbO;;AAAA,gBAcRA,GAdQ;AAAA;AAAA;AAAA;;AAeXR,gBAAII,KAAJ,CAAU;AACRC,uBAAS,mCADD,CACsC;AADtC,aAAV;AAfW,6CAkBJC,MAlBI;;AAAA;AAAA;AAAA,mBAoBLE,IAAIC,MAAJ,EApBK;;AAAA;AAAA;AAAA,mBAwBId,eAAee,kBAAf,CAAkCR,KAAlC,CAxBJ;;AAAA;AAwBTS,gBAxBS;;AAAA,gBAyBRA,IAzBQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA0BEhB,eAAeiB,aAAf,CAA6B;AACxCV;AADwC,aAA7B,CA1BF;;AAAA;AA0BXS,gBA1BW;;AAAA;;AA+BbX,gBAAIa,OAAJ,CAAY;AACVF,wBADU;AAEVG,qBAAOpB,YAAYqB,aAAZ,CAA0BJ,IAA1B,CAFG;AAGVN,uBAAS,8BAHC,CAG+B;AAH/B,aAAZ;AA/Ba;AAAA;;AAAA;AAAA;AAAA;;AAqCbL,gBAAII,KAAJ,CAAU;AACRC,uBAAS,YAAIA;AADL,aAAV;;AArCa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"confirm.auth.js","sourcesContent":["const { Sms } = require('../../../models/sms.model');\r\nconst {\r\n  AuthService,\r\n  ProfileService,\r\n  NotificationSettingService,\r\n} = require('../../../services');\r\n\r\nmodule.exports = async (req, res) => {\r\n  const { phone, code } = req.body;\r\n\r\n  try {\r\n    // Validate parameters existence\r\n    if (!phone || !code) {\r\n      res.error({\r\n        message: 'api.auth.sms-confirm.no-code', //'Please provide code'\r\n      });\r\n      return next();\r\n    }\r\n\r\n    // Compare user input code and sms saved to db\r\n    const sms = await Sms.findOne({ phone, code });\r\n    if (!sms) {\r\n      res.error({\r\n        message: 'api.auth.sms-confirm.code-expired', //'Code expired'\r\n      });\r\n      return next();\r\n    } else {\r\n      await sms.remove();\r\n    }\r\n\r\n    // Get existing user, if not, create new one.\r\n    let user = await ProfileService.findProfileByPhone(phone);\r\n    if (!user) {\r\n      user = await ProfileService.createProfile({\r\n        phone,\r\n      });\r\n    }\r\n\r\n    res.success({\r\n      user,\r\n      token: AuthService.generateToken(user),\r\n      message: 'api.auth.sms-confirm.success', //'verification success'\r\n    });\r\n  } catch (err) {\r\n    res.error({\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n"]}